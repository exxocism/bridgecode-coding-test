
5. 양도소득세 세율 변동 연혁표의 기본세율이 아래와 같이 주어진 경우,
기본세율 테이블을 설계하고 데이터 삽입 및 조회 쿼리를 만들어보세요.

*목적: 조회 조건으로 양도일자, 과표가 주어지면 세율과 누진공제금액을 출력할 수 있어야 합니다.

확장과 데이터형, 인덱스 및 제약조건에 대해 고민도 같이 해주시기 바랍니다.

※ 데이터 출처: https://www.nts.go.kr/nts/cm/cntnts/cntntsView.do?mi=2312&cntntsId=7711


A) 빠르게 작성하는 방법은 정규화 없이 아래의 테이블 1개로 처리하는 방법이 있을 수 있습니다.

CREATE TABLE `taxrules_unnormalized` (
	`ruleid`	INT UNSIGNED	NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`year_start`	SMALLINT UNSIGNED	NULL,
	`year_end`	SMALLINT UNSIGNED	NULL,
	`money_bottom`	BIGINT UNSIGNED	NULL,
	`money_top`	BIGINT UNSIGNED	NULL,
	`tax_rate`	DECIMAL(4,2)	NOT NULL,
	`max_exempt`	BIGINT UNSIGNED	NOT NULL
);

그러나 추후의 확장을 고려한다고 했을 때는 각각의 테이블을 정규화하여 외래키로 연결하는 방법이 좀더 일괄적인 변경에 도움이 될 것으로 생각됩니다.
따라서 저는 연도, 과표, 세율, 누진공제를 각각 테이블로 만들고, 이를 조합하여 규칙 테이블을 만들고자 합니다.


CREATE TABLE `tax_year` (
	`year_id`	INT UNSIGNED	NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`year_start`	SMALLINT UNSIGNED	NULL,
	`year_end`	SMALLINT UNSIGNED	NULL
);

CREATE TABLE `tax_money` (
	`money_id`	INT UNSIGNED	NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`money_bottom`	BIGINT UNSIGNED	NULL,
	`money_top`	BIGINT UNSIGNED	NULL
);

CREATE TABLE `tax_rate` (
	`rateid`	INT UNSIGNED	NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`rate`	DECIMAL(4,2)	NULL
);

CREATE TABLE `tax_exempt` (
	`exemptid`	INT UNSIGNED	NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`price`	BIGINT UNSIGNED	NULL
);

CREATE TABLE `tax_rules` (
	`ruleid`	INT UNSIGNED	NOT NULL AUTO_INCREMENT PRIMARY KEY,
	`year_id`	INT UNSIGNED	NOT NULL,
	`money_id`	INT UNSIGNED	NOT NULL,
	`rateid`	INT UNSIGNED	NOT NULL,
	`exemptid`	INT UNSIGNED	NOT NULL,
  FOREIGN KEY (`year_id`)	REFERENCES `tax_year`(`year_id`) ON DELETE CASCADE,
  FOREIGN KEY (`money_id`)	REFERENCES `tax_money`(`money_id`) ON DELETE CASCADE,
  FOREIGN KEY (`rateid`)	REFERENCES `tax_rate`(`rateid`) ON DELETE CASCADE,
  FOREIGN KEY (`exemptid`)	REFERENCES `tax_exempt`(`exemptid`) ON DELETE CASCADE
);


그리고 테이블에 각각의 갑을 입력합니다.


INSERT INTO `tax_year` (`year_start`, `year_end`) VALUES (2012, 2013), (2014, 2016), (2017, 2017), (2018, 2021), (2021, 9999);

INSERT INTO `tax_money` (`money_bottom`, `money_top`) VALUES (0, 12000000), (12000000, 46000000), (46000000, 88000000), (88000000, 300000000), (300000000, 99999999999);
INSERT INTO `tax_money` (`money_bottom`, `money_top`) VALUES (88000000, 150000000), (150000000, 99999999999);
INSERT INTO `tax_money` (`money_bottom`, `money_top`) VALUES (150000000, 500000000), (500000000, 99999999999);
INSERT INTO `tax_money` (`money_bottom`, `money_top`) VALUES (150000000, 300000000), (300000000, 500000000);
INSERT INTO `tax_money` (`money_bottom`, `money_top`) VALUES (50000000, 1000000000), (1000000000, 99999999999);

INSERT INTO `tax_rate` (`rate`) VALUES (6.00), (15.00), (24.00), (35.00), (38.00), (40.00), (42.00), (45.00);
INSERT INTO `tax_exempt` (`price`) VALUES (0), (1080000), (5220000), (14900000), (19400000), (23900000), (25400000), (29400000), (35400000), (65400000);

INSERT INTO `tax_rules` (`year_id`, `money_id`, `rateid`, `exemptid`) VALUES (1, 1, 1, 1), (1, 2, 2, 2), (1, 3, 3, 3), (1, 4, 4, 4), (1, 5, 5, 5);
INSERT INTO `tax_rules` (`year_id`, `money_id`, `rateid`, `exemptid`) VALUES (2, 1, 1, 1), (2, 2, 2, 2), (2, 3, 3, 3), (2, 6, 4, 4), (2, 7, 5, 9);
INSERT INTO `tax_rules` (`year_id`, `money_id`, `rateid`, `exemptid`) VALUES (3, 1, 1, 1), (3, 2, 2, 2), (3, 3, 3, 3), (3, 6, 4, 4), (3, 8, 5, 9), (3, 9, 6, 6);
INSERT INTO `tax_rules` (`year_id`, `money_id`, `rateid`, `exemptid`) VALUES (4, 1, 1, 1), (4, 2, 2, 2), (4, 3, 3, 3), (4, 6, 4, 4), (4, 10, 5, 9), (4, 11, 6, 10), (4, 9, 7, 7);
INSERT INTO `tax_rules` (`year_id`, `money_id`, `rateid`, `exemptid`) VALUES (5, 1, 1, 1), (5, 2, 2, 2), (5, 3, 3, 3), (5, 6, 4, 4), (5, 10, 5, 9), (5, 11, 6, 10), (5, 12, 7, 7), (5, 13, 8, 8);


이후 조회는 JOIN을 이용하여 각 테이블을 조합한 뒤, WHERE문을 이용하여 검색할 수 있습니다.

SELECT `tax_rate`.`rate`, `tax_exempt`.`price` FROM `tax_rules`
  LEFT JOIN `tax_year` ON tax_rules.year_id=tax_year.year_id
  LEFT JOIN `tax_money` ON tax_rules.money_id=tax_money.money_id
  LEFT JOIN `tax_rate` ON tax_rules.rateid=tax_rate.rateid
  LEFT JOIN `tax_exempt` ON tax_rules.exemptid=tax_exempt.exemptid
  WHERE ? >= tax_year.year_start AND ? <= tax_year.year_end
  AND ? > tax_money.money_bottom AND ? <= tax_money.money_top;

조회결과 아래와 같이 정상적으로 쿼리가 실행되는 것을 확인할 수 있습니다.

+------+-------+
| rate | price |
+------+-------+
| 6.00 |     0 |
+------+-------+
1 row in set (0.00 sec)


테이블 설계 페이지는 아래 주소에서 확인하실 수 있습니다.
https://www.erdcloud.com/d/bbGidqWRkxQE4jySo